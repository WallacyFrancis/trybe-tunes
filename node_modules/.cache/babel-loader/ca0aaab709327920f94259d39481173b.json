{"ast":null,"code":"var _jsxFileName = \"/home/wallacy/Documentos/Aulas_Trybe/Projetos/trybetunes/sd-014-b-project-trybetunes/src/pages/Album.js\";\nimport React from 'react';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport Carregando from '../Carregando';\nimport MusicCard from '../components/MusicCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.requestMusic = this.requestMusic.bind(this);\n    this.requestAlbumInfo = this.requestAlbumInfo.bind(this);\n    this.state = {\n      loading: false,\n      tracks: [],\n      error: false,\n      errorMsg: '',\n      artist: '',\n      album: ''\n    };\n  }\n\n  componentDidMount() {\n    this.requestMusic();\n  }\n\n  async requestMusic() {\n    this.setState({\n      loading: true\n    });\n    const URL = window.location.href;\n    const id = URL.split('album/');\n\n    try {\n      const musics = await getMusics(id[1]);\n      this.requestAlbumInfo(musics);\n      return musics;\n    } catch (e) {\n      this.setState({\n        error: true,\n        errorMsg: `Ops! aconteceu um erro ${e}, recarregue sua página`,\n        loading: false\n      });\n    }\n  }\n\n  requestAlbumInfo(album) {\n    const objToArr = Object.values(album);\n    const nemArray = [];\n    album.forEach(music => {\n      music.wrapperType === 'collection' ? '' : nemArray.push(music);\n    });\n    this.setState({\n      artist: objToArr[0].artistName,\n      album: objToArr[0].collectionName,\n      tracks: nemArray,\n      loading: false\n    });\n    console.log(album);\n  }\n\n  render() {\n    const {\n      loading,\n      tracks,\n      error,\n      errorMsg,\n      album,\n      artist\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Carregando, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this) : '', error ? errorMsg : '', /*#__PURE__*/_jsxDEV(\"h3\", {\n        \"data-testid\": \"album-name\",\n        children: album\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        \"data-testid\": \"artist-name\",\n        children: artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), tracks.map((music, index) => /*#__PURE__*/_jsxDEV(MusicCard, {\n        previewUrl: music.collectionViewUrl,\n        trackName: music.artistViewUrl,\n        number: index,\n        trackId: music.trackId\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Album;","map":{"version":3,"sources":["/home/wallacy/Documentos/Aulas_Trybe/Projetos/trybetunes/sd-014-b-project-trybetunes/src/pages/Album.js"],"names":["React","Header","getMusics","Carregando","MusicCard","Album","Component","constructor","requestMusic","bind","requestAlbumInfo","state","loading","tracks","error","errorMsg","artist","album","componentDidMount","setState","URL","window","location","href","id","split","musics","e","objToArr","Object","values","nemArray","forEach","music","wrapperType","push","artistName","collectionName","console","log","render","map","index","collectionViewUrl","artistViewUrl","trackId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport Carregando from '../Carregando';\nimport MusicCard from '../components/MusicCard';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.requestMusic = this.requestMusic.bind(this);\n    this.requestAlbumInfo = this.requestAlbumInfo.bind(this);\n    this.state = {\n      loading: false,\n      tracks: [],\n      error: false,\n      errorMsg: '',\n      artist: '',\n      album: '',\n    };\n  }\n\n  componentDidMount() {\n    this.requestMusic();\n  }\n\n  async requestMusic() {\n    this.setState({ loading: true });\n    const URL = window.location.href;\n    const id = URL.split('album/');\n    try {\n      const musics = await getMusics(id[1]);\n      this.requestAlbumInfo(musics);\n      return musics;\n    } catch (e) {\n      this.setState({\n        error: true,\n        errorMsg: `Ops! aconteceu um erro ${e}, recarregue sua página`,\n        loading: false,\n      });\n    }\n  }\n\n  requestAlbumInfo(album) {\n    const objToArr = Object.values(album);\n    const nemArray = [];\n    album.forEach((music) => {\n      music.wrapperType === 'collection' ? '' : nemArray.push(music);\n    });\n    this.setState({\n      artist: objToArr[0].artistName,\n      album: objToArr[0].collectionName,\n      tracks: nemArray,\n      loading: false,\n    });\n    console.log(album);\n  }\n\n  render() {\n    const { loading, tracks, error, errorMsg, album, artist } = this.state;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        { loading ? <Carregando /> : '' }\n        { error ? errorMsg : ''}\n        <h3 data-testid=\"album-name\">{ album }</h3>\n        <h4 data-testid=\"artist-name\">{ artist }</h4>\n        {\n          tracks.map((music, index) => (\n            <MusicCard\n              key={ index }\n              previewUrl={ music.collectionViewUrl }\n              trackName={ music.artistViewUrl }\n              number={ index }\n              trackId={ music.trackId }\n            />\n          ))\n        }\n      </div>\n    );\n  }\n}\n\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}