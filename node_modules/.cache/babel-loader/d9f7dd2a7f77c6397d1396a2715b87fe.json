{"ast":null,"code":"var _jsxFileName = \"/home/wallacy/Documentos/Aulas_Trybe/Projetos/trybetunes/sd-014-b-project-trybetunes/src/components/MusicCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong } from '../services/favoriteSongsAPI';\nimport getMusics from '../services/musicsAPI';\nimport Carregando from '../Carregando';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MusicCard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async handleChange(event) {\n    const checkdValue = event.target.checked;\n\n    if (checkdValue) {\n      this.setState({\n        loading: true\n      });\n      const componetId = event.target.id;\n      const requesMusic = await getMusics(componetId);\n      console.log(requesMusic);\n      await addSong(requesMusic[0]);\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      trackName,\n      previewUrl,\n      number,\n      trackId,\n      loading\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: loading ? /*#__PURE__*/_jsxDEV(Carregando, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 27\n        }, this) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          \"data-testid\": `checkbox-music-${trackId}`,\n          htmlFor: trackId,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Track Name\", ' ', number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n            \"data-testid\": \"audio-component\",\n            src: previewUrl,\n            controls: true,\n            children: [/*#__PURE__*/_jsxDEV(\"track\", {\n              kind: \"captions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), \"O seu navegador n\\xE3o suporta o elemento\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n              children: trackName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), \"Favorita\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: trackId,\n            name: \"checkbox-music\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMusicCard.propTypes = {\n  trackId: PropTypes.number.isRequired,\n  trackName: PropTypes.string.isRequired,\n  previewUrl: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired\n};\nexport default MusicCard;","map":{"version":3,"sources":["/home/wallacy/Documentos/Aulas_Trybe/Projetos/trybetunes/sd-014-b-project-trybetunes/src/components/MusicCard.js"],"names":["React","PropTypes","addSong","getMusics","Carregando","MusicCard","Component","constructor","state","loading","handleChange","bind","event","checkdValue","target","checked","setState","componetId","id","requesMusic","console","log","render","trackName","previewUrl","number","trackId","props","propTypes","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEiB,QAAZD,YAAY,CAACE,KAAD,EAAQ;AACxB,UAAMC,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAaC,OAAjC;;AACA,QAAIF,WAAJ,EAAiB;AACf,WAAKG,QAAL,CAAc;AAAEP,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,YAAMQ,UAAU,GAAGL,KAAK,CAACE,MAAN,CAAaI,EAAhC;AACA,YAAMC,WAAW,GAAG,MAAMhB,SAAS,CAACc,UAAD,CAAnC;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,YAAMjB,OAAO,CAACiB,WAAW,CAAC,CAAD,CAAZ,CAAb;AACA,WAAKH,QAAL,CAAc;AAAEP,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD;AACF;;AAEDa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,UAAb;AAAyBC,MAAAA,MAAzB;AAAiCC,MAAAA,OAAjC;AAA0CjB,MAAAA;AAA1C,QAAsD,KAAKkB,KAAjE;AACA,wBACE;AAAA,8BACE;AAAA,kBAAQlB,OAAO,gBAAG,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAAH,GAAoB;AAAnC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BACE;AACE,yBAAe,kBAAiBiB,OAAQ,EAD1C;AAEE,UAAA,OAAO,EAAGA,OAFZ;AAAA,kCAIE;AAAA,qCAEG,GAFH,EAGGD,MAHH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eASE;AAAA;AAAA;AAAA;AAAA,kBATF,eAUE;AAAO,2BAAY,iBAAnB;AAAqC,YAAA,GAAG,EAAGD,UAA3C;AAAwD,YAAA,QAAQ,MAAhE;AAAA,oCACE;AAAO,cAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,oBADF,+CAGG,GAHH,eAIE;AAAA,wBAAQD;AAAR;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,2BAiBE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,EAAE,EAAGG,OAFP;AAGE,YAAA,IAAI,EAAC,gBAHP;AAIE,YAAA,QAAQ,EAAG,KAAKhB;AAJlB;AAAA;AAAA;AAAA;AAAA,kBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA+BD;;AAtDqC;;AAyDxCL,SAAS,CAACuB,SAAV,GAAsB;AACpBF,EAAAA,OAAO,EAAEzB,SAAS,CAACwB,MAAV,CAAiBI,UADN;AAEpBN,EAAAA,SAAS,EAAEtB,SAAS,CAAC6B,MAAV,CAAiBD,UAFR;AAGpBL,EAAAA,UAAU,EAAEvB,SAAS,CAAC6B,MAAV,CAAiBD,UAHT;AAIpBJ,EAAAA,MAAM,EAAExB,SAAS,CAACwB,MAAV,CAAiBI;AAJL,CAAtB;AAOA,eAAexB,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong } from '../services/favoriteSongsAPI';\nimport getMusics from '../services/musicsAPI';\nimport Carregando from '../Carregando';\n\nclass MusicCard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async handleChange(event) {\n    const checkdValue = event.target.checked;\n    if (checkdValue) {\n      this.setState({ loading: true })\n      const componetId = event.target.id;\n      const requesMusic = await getMusics(componetId);\n      console.log(requesMusic);\n      await addSong(requesMusic[0]);\n      this.setState({ loading: false })\n    }\n  }\n\n  render() {\n    const { trackName, previewUrl, number, trackId, loading } = this.props;\n    return (\n      <div>\n        <span>{ loading ? <Carregando /> : '' }</span>\n        <section>\n          <label\n            data-testid={ `checkbox-music-${trackId}` }\n            htmlFor={ trackId }\n          >\n            <span>\n              Track Name\n              {' '}\n              {number}\n            </span>\n            <br />\n            <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n              <track kind=\"captions\" />\n              O seu navegador n√£o suporta o elemento\n              {' '}\n              <code>{ trackName }</code>\n            </audio>\n            Favorita\n            <input\n              type=\"checkbox\"\n              id={ trackId }\n              name=\"checkbox-music\"\n              onChange={ this.handleChange }\n            />\n          </label>\n        </section>\n      </div>\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  trackId: PropTypes.number.isRequired,\n  trackName: PropTypes.string.isRequired,\n  previewUrl: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n};\n\nexport default MusicCard;\n"]},"metadata":{},"sourceType":"module"}